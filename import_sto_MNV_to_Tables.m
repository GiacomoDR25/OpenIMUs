%% Import data from text file
% Script for importing data from the following text file:
%   
%    filename: C:\GiacomoDR\OpenSense\Functional_Calibration\IMU_registration\005_ik_orientations_10_filtered.sto
%
% Auto-generated by MATLAB on 05-Mar-2021 10:42:53
for i =1:2
N_var_q = 49; %quaternions
N_var = 37;% acc/gyr/magt
start_line = 7;
fs = 240;

%% Setup the Import Options and import the data
opts = delimitedTextImportOptions("NumVariables", N_var);

% Specify range and delimiter
opts.DataLines = [start_line, Inf];
opts.Delimiter = ["\t", " ", ","];

% Specify column names and types
opts.VariableNames = ["time", 'torso_imuX', 'torso_imuY', 'torso_imuZ',...
    'pelvis_imuX', 'pelvis_imuY', 'pelvis_imuZ',...
    'humerus_r_imuX', 'humerus_r_imuY', 'humerus_r_imuZ',...
    'radius_r_imuX',  'radius_r_imuY', 'radius_r_imuZ',...
    'humerus_l_imuX', 'humerus_l_imuY', 'humerus_l_imuZ',...
    'radius_l_imuX', 'radius_l_imuY', 'radius_l_imuZ',...
    'femur_r_imuX', 'femur_r_imuY', 'femur_r_imuZ',...
    'tibia_r_imuX', 'tibia_r_imuY', 'tibia_r_imuZ',...
    'calcn_r_imuX', 'calcn_r_imuY', 'calcn_r_imuZ',...    
    'femur_l_imuX', 'femur_l_imuY', 'femur_l_imuZ',...
    'tibia_l_imuX', 'tibia_l_imuY', 'tibia_l_imuZ',...
    'calcn_l_imuX', 'calcn_l_imuY', 'calcn_l_imuZ'];

% Specify column names and types
% opts.VariableNames = ["time",  'pelvis_imuX', 'pelvis_imuY', 'pelvis_imuZ',...
%     'femur_r_imuX', 'femur_r_imuY', 'femur_r_imuZ',...
%     'tibia_r_imuX', 'tibia_r_imuY', 'tibia_r_imuZ',...
%     'calcn_r_imuX', 'calcn_r_imuY', 'calcn_r_imuZ',...    
%     'femur_l_imuX', 'femur_l_imuY', 'femur_l_imuZ',...
%     'tibia_l_imuX', 'tibia_l_imuY', 'tibia_l_imuZ',...
%     'calcn_l_imuX', 'calcn_l_imuY', 'calcn_l_imuZ'];

opts.VariableTypes = ["double", "double", "double", "double", "double", ...
    "double", "double", "double", "double", "double", ...
    "double", "double", "double", "double", "double", ...
    "double", "double", "double", "double", "double", ...
    "double", "double", "double", "double", "double", ...
    "double", "double", "double", "double", "double", ...
    "double", "double", "double", "double", "double", ...
    "double", "double"];
% opts.VariableTypes = [ "double","double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double"];

% Specify file level properties
opts.ExtraColumnsRule = "ignore";
opts.EmptyLineRule = "read";

% Import the data
% Acc, Gyr, Mag
if i>=10
    load (['Session1-0', num2str(i),'_DataM'])
else
    load (['Session1-00', num2str(i),'_DataM'])
end

time = 1/fs*[0:length(DataMatrix)-1];
% w = angvel(q5, 1/60, 'point');

a = table('Size', [length(DataMatrix_acc) size(DataMatrix_acc, 2)+1], 'VariableTypes', opts.VariableTypes);
a.Properties.VariableNames = opts.VariableNames;
a.Variables =  [time', DataMatrix_acc(1:end,:)];

m = table('Size', [length(DataMatrix_mag) size(DataMatrix_mag, 2)+1], 'VariableTypes', opts.VariableTypes);
m.Properties.VariableNames = opts.VariableNames;
m.Variables = [time', DataMatrix_mag(1:end, :)];

% w = readtable('C:\GiacomoDR\OpenSense\Functional_Calibration\Collection_2\Walking_MT_Manager_for_back_3\MT_20210427_01200454-002-000_angularVelocities.sto', opts);
% a = readtable('C:\GiacomoDR\OpenSense\Functional_Calibration\Collection_2\Walking_MT_Manager_for_back_3\MT_20210427_01200454-002-000_linearAccelerations.sto', opts);
% m = readtable('C:\GiacomoDR\OpenSense\Functional_Calibration\Collection_2\Walking_MT_Manager_for_back_3\MT_20210427_01200454-002-000_magneticNorthHeadings.sto', opts);

% w = readtable('C:\GiacomoDR\OpenSense\Functional_Calibration\Collection_1\SitToStand0\MT_01200454_056-000_angularVelocities.sto', opts);
% a = readtable('C:\GiacomoDR\OpenSense\Functional_Calibration\Collection_1\SitToStand0\MT_01200454_056-000_linearAccelerations.sto', opts);
% m = readtable('C:\GiacomoDR\OpenSense\Functional_Calibration\Collection_1\SitToStand0\MT_01200454_056-000_magneticNorthHeadings.sto', opts);
%%
% Import quaternion
opts = delimitedTextImportOptions("NumVariables", N_var_q);

% Specify range and delimiter
opts.DataLines = [start_line, Inf];
opts.Delimiter = ["\t", " ", ","];

opts.VariableNames = ["time", 'torso_imu_q0', 'torso_imu_q1', 'torso_imu_q2', 'torso_imu_q3',...
    "pelvis_imu_q0", 'pelvis_imu_q1', 'pelvis_imu_q2', 'pelvis_imu_q3',...
    'humerus_r_imu_q0', 'humerus_r_imu_q1', 'humerus_r_imu_q2', 'humerus_r_imu_q3',...
    'radius_r_imu_q0',  'radius_r_imu_q1',  'radius_r_imu_q2', 'radius_r_imu_q3',...
    'humerus_l_imu_q0', 'humerus_l_imu_q1', 'humerus_l_imu_q2', 'humerus_l_imu_q3',...
    'radius_l_imu_q0', 'radius_l_imu_q1', 'radius_l_imu_q2', 'radius_l_imu_q3',...
    'femur_r_imu_q0', 'femur_r_imu_q1', 'femur_r_imu_q2', 'femur_r_imu_q3',...
    'tibia_r_imu_q0', 'tibia_r_imu_q1', 'tibia_r_imu_q2', 'tibia_r_imu_q3',...
    'calcn_r_imu_q0', 'calcn_r_imu_q1', 'calcn_r_imu_q2', 'calcn_r_imu_q3',...
    'femur_l_imu_q0', 'femur_l_imu_q1', 'femur_l_imu_q2', 'femur_l_imu_q3',...
    'tibia_l_imu_q0', 'tibia_l_imu_q1', 'tibia_l_imu_q2', 'tibia_l_imu_q3',...
    'calcn_l_imu_q0', 'calcn_l_imu_q1', 'calcn_l_imu_q2', 'calcn_l_imu_q3'];

opts.VariableTypes = ["double", "double", "double", "double","double", "double", "double", "double", "double", "double","double", "double", "double", "double", "double", "double","double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double"];

% opts.VariableNames = ["time", "pelvis_imu_q0", 'pelvis_imu_q1', 'pelvis_imu_q2', 'pelvis_imu_q3',...
%     'femur_r_imu_q0', 'femur_r_imu_q1', 'femur_r_imu_q2', 'femur_r_imu_q3',...
%     'tibia_r_imu_q0', 'tibia_r_imu_q1', 'tibia_r_imu_q2', 'tibia_r_imu_q3',...
%     'calcn_r_imu_q0', 'calcn_r_imu_q1', 'calcn_r_imu_q2', 'calcn_r_imu_q3',...
%     'femur_l_imu_q0', 'femur_l_imu_q1', 'femur_l_imu_q2', 'femur_l_imu_q3',...
%     'tibia_l_imu_q0', 'tibia_l_imu_q1', 'tibia_l_imu_q2', 'tibia_l_imu_q3',...
%     'calcn_l_imu_q0', 'calcn_l_imu_q1', 'calcn_l_imu_q2', 'calcn_l_imu_q3'];
% 
% opts.VariableTypes = [ "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double"];

% Specify file level properties
opts.ExtraColumnsRule = "ignore";
opts.EmptyLineRule = "read";

q = table('Size', [length(DataMatrix) size(DataMatrix, 2)+1], 'VariableTypes', opts.VariableTypes);
q.Properties.VariableNames = opts.VariableNames;
q.Variables =  [time', DataMatrix(1:end,:)];

% q = readtable('C:\GiacomoDR\OpenSense\Functional_Calibration\Collection_1\SitToStand0\MT_01200454_056-000_orientations.sto', opts);

% q6 = readtable('C:\GiacomoDR\OpenSense\Functional_Calibration\Knee_Flexion_R\MT_01200454_006-000_orientations.sto', opts);
%%
if i>=10
    save(['IMU_0', num2str(i),'_v1'], 'm', 'a',  'q');
else
    save(['IMU_00', num2str(i),'_v1'], 'm', 'a',  'q');
end





%% Clear temporary variables
clear opts
end